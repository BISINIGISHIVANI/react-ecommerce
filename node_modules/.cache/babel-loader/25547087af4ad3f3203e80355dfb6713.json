{"ast":null,"code":"var _jsxFileName = \"F:\\\\git-practice\\\\react-ecommerce\\\\flip-shop_app\\\\src\\\\pages\\\\cart\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./cart.css\";\nimport { CartAmount } from \"./component/CartAmount\";\nimport { CartItem } from \"./component/CartItem\";\nimport { useAuth } from \"../../hooks\";\nimport { useCart } from \"../../hooks/context/cart-context\";\nimport { getCartItemService } from \"../../services/cart-services/cart.service\";\nimport { updateCartHandler, removeFromCartHandler, getCartBill } from \"../../hooks/utilis/cart-utils/cart-util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function cart() {\n  _s();\n\n  const {\n    authState\n  } = useAuth();\n  const {\n    token\n  } = authState;\n  const {\n    cartState,\n    cartDispatch\n  } = useCart();\n  const {\n    cart\n  } = cartState;\n  const {\n    cartQuantity,\n    cartPrice,\n    totalPrice\n  } = getCartBill(cart);\n\n  const callUpdateCartHandler = (_id, actionType) => {\n    updateCartHandler(_id, actionType, token, cartDispatch);\n  };\n\n  const callRemoveFromCartHandler = _id => {\n    removeFromCartHandler(_id, token, cartDispatch);\n  };\n\n  const getCartItems = async () => {\n    try {\n      const response = await getCartItemService(token);\n\n      if (response.status === 200) {\n        cartDispatch({\n          type: \"GET_CART_ITEM\",\n          payload: response.data.cart\n        });\n      } else {\n        throw new Error();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  useEffect(() => getCartItems(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    children: [cart.length !== 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"your cart(\", cart.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-content\",\n        children: cart.map(_ref => {\n          let {} = _ref;\n          return /*#__PURE__*/_jsxDEV(CartItem, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 12\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Price details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CartAmount, {\n          numberItems: cartQuantity,\n          cartPrice: cartPrice,\n          cartDiscount: \"400\",\n          cartDelivaryCharge: \"200\",\n          cartTotalPrice: totalPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(cart, \"iAaFpcOKT2R42XXnq/T2IG0+qMc=\", false, function () {\n  return [useAuth, useCart];\n});","map":{"version":3,"sources":["F:/git-practice/react-ecommerce/flip-shop_app/src/pages/cart/Cart.jsx"],"names":["React","useEffect","CartAmount","CartItem","useAuth","useCart","getCartItemService","updateCartHandler","removeFromCartHandler","getCartBill","cart","authState","token","cartState","cartDispatch","cartQuantity","cartPrice","totalPrice","callUpdateCartHandler","_id","actionType","callRemoveFromCartHandler","getCartItems","response","status","type","payload","data","Error","error","alert","length","map"],"mappings":"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","sourcesContent":["import React ,{ useEffect } from \"react\";\r\nimport \"./cart.css\";\r\nimport { CartAmount } from \"./component/CartAmount\";\r\nimport { CartItem } from \"./component/CartItem\";\r\nimport { useAuth } from \"../../hooks\";\r\nimport { useCart } from \"../../hooks/context/cart-context\";\r\nimport {getCartItemService} from \"../../services/cart-services/cart.service\";\r\nimport { updateCartHandler,removeFromCartHandler,getCartBill } from \"../../hooks/utilis/cart-utils/cart-util\";\r\nexport default function cart() {\r\n  const {authState}=useAuth();\r\n  const {token}=authState;\r\n  const {cartState,cartDispatch}=useCart();\r\n  const {cart}=cartState;\r\n  const { cartQuantity, cartPrice, totalPrice } = getCartBill(cart);\r\n\r\n  const callUpdateCartHandler = (_id, actionType) => {\r\n    updateCartHandler(_id, actionType, token, cartDispatch);\r\n  }\r\n\r\n  const callRemoveFromCartHandler = (_id) => {\r\n    removeFromCartHandler(_id, token, cartDispatch)\r\n  }\r\n  const getCartItems = async () => {\r\n    try {\r\n      const response = await getCartItemService(token);\r\n      if (response.status === 200) {\r\n        cartDispatch({ type: \"GET_CART_ITEM\", payload: response.data.cart })\r\n      } else {\r\n        throw new Error();\r\n      }\r\n    }\r\n    catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n  useEffect(() => getCartItems(), []);\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      {cart.length !==0 ? (<h2>your cart({cart.length})</h2>):null}\r\n      <div className=\"cart\">\r\n        <div className=\"cart-content\">\r\n          {cart.map(({\r\n            \r\n          })=>\r\n          (<CartItem/>)\r\n          )}\r\n          {/* {cart.map (item=>(\r\n            <CartItem\r\n            key={item.cartId}\r\n            cartId={item.cartId}\r\n            cartImg={item.cartImg}\r\n            CartTitle={item.CartTitle}\r\n            CartSubtitle={item.CartSubtitle}\r\n            cartPrice={item.cartPrice}\r\n            cartDiscount={item.cartDiscount}\r\n            callremoveFromCartHandler={callRemoveFromCartHandler}\r\n            callupdateCartHandler={callUpdateCartHandler}\r\n            />\r\n          ))} */}\r\n        </div>\r\n        <div className=\"cart-footer\">\r\n          <h3>Price details</h3>\r\n          <hr />\r\n          <CartAmount \r\n          numberItems={cartQuantity}\r\n          cartPrice={cartPrice}\r\n          cartDiscount={\"400\"}\r\n          cartDelivaryCharge={\"200\"}\r\n          cartTotalPrice={totalPrice}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
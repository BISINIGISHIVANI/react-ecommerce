{"ast":null,"code":"var _jsxFileName = \"F:\\\\git-practice\\\\react-ecommerce\\\\flip-shop_app\\\\src\\\\hooks\\\\context\\\\auth-context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from \"react\";\nimport axios from \"axios\";\nimport { AuthReducer } from \"../reducer/auth-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst intialObj = {\n  user: {},\n  status: '',\n  newUser: {}\n};\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [authState, dispatch] = useReducer(AuthReducer, intialObj);\n  const [user, setUser] = useState({});\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        email,\n        password\n      });\n      console.log(response);\n\n      if (response.status === 200) {\n        localStorage.setItem(response.data.encodedToken);\n        localStorage.setItem(JSON.stringify(response.data.foundUser));\n        dispatch({\n          type: \"SET_USER\",\n          payload: response.data.foundUser\n        });\n        dispatch({\n          type: \"SET_STATUS\",\n          payload: response.status\n        });\n        setTimeout(() => {\n          navigate(\"/\");\n        }, 1000);\n        navigate(\"/login\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      dispatch,\n      login,\n      status\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthProvider, \"oCW34q/qO73KDrAuCXGD3HP1Vo4=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["F:/git-practice/react-ecommerce/flip-shop_app/src/hooks/context/auth-context.jsx"],"names":["createContext","useContext","useReducer","axios","AuthReducer","AuthContext","intialObj","user","status","newUser","AuthProvider","children","authState","dispatch","setUser","useState","login","email","password","response","post","console","log","localStorage","setItem","data","encodedToken","JSON","stringify","foundUser","type","payload","setTimeout","navigate","error","useAuth"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,WAAW,gBAACL,aAAa,EAA/B;AACA,MAAMM,SAAS,GAAC;AACZC,EAAAA,IAAI,EAAC,EADO;AAEZC,EAAAA,MAAM,EAAC,EAFK;AAGZC,EAAAA,OAAO,EAAC;AAHI,CAAhB;;AAKA,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnC,QAAM,CAACC,SAAD,EAAWC,QAAX,IAAuBX,UAAU,CAACE,WAAD,EAAcE,SAAd,CAAvC;AACA,QAAM,CAACC,IAAD,EAAMO,OAAN,IAAeC,QAAQ,CAAC,EAAD,CAA7B;;AAEA,QAAMC,KAAK,GAAC,OAAOC,KAAP,EAAaC,QAAb,KAAwB;AAChC,QAAI;AACF,YAAMC,QAAQ,GAAC,MAAMhB,KAAK,CAACiB,IAAN,CAAW,iBAAX,EAA6B;AAACH,QAAAA,KAAD;AAAOC,QAAAA;AAAP,OAA7B,CAArB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,UAAGA,QAAQ,CAACX,MAAT,KAAoB,GAAvB,EAA2B;AACzBe,QAAAA,YAAY,CAACC,OAAb,CAAqBL,QAAQ,CAACM,IAAT,CAAcC,YAAnC;AACAH,QAAAA,YAAY,CAACC,OAAb,CAAqBG,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACM,IAAT,CAAcI,SAA7B,CAArB;AACAhB,QAAAA,QAAQ,CAAC;AAACiB,UAAAA,IAAI,EAAC,UAAN;AAAiBC,UAAAA,OAAO,EAACZ,QAAQ,CAACM,IAAT,CAAcI;AAAvC,SAAD,CAAR;AACAhB,QAAAA,QAAQ,CAAC;AAACiB,UAAAA,IAAI,EAAC,YAAN;AAAmBC,UAAAA,OAAO,EAACZ,QAAQ,CAACX;AAApC,SAAD,CAAR;AACFwB,QAAAA,UAAU,CAAC,MAAI;AACbC,UAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,SAFS,EAER,IAFQ,CAAV;AAGAA,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACC;AAEF,KAdD,CAcE,OAAOC,KAAP,EAAc;AACdb,MAAAA,OAAO,CAACa,KAAR,CAAcA,KAAd;AACD;AACF,GAlBH;;AAmBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACtB,MAAAA,SAAD;AAAWC,MAAAA,QAAX;AAAoBG,MAAAA,KAApB;AAA0BR,MAAAA;AAA1B,KAA7B;AAAA,cACGG;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5BH;;GAAMD,Y;;KAAAA,Y;;AA6BJ,MAAMyB,OAAO,GAAG;AAAA;;AAAA,SAAMlC,UAAU,CAACI,WAAD,CAAhB;AAAA,CAAhB;;IAAM8B,O;;AAEN,SAASzB,YAAT,EAAuByB,OAAvB","sourcesContent":["import { createContext, useContext, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthReducer } from \"../reducer/auth-reducer\";\r\n\r\nconst AuthContext=createContext();\r\nconst intialObj={\r\n    user:{},\r\n    status:'',\r\n    newUser:{}\r\n}\r\nconst AuthProvider = ({ children }) => {\r\n    const [authState,dispatch] = useReducer(AuthReducer, intialObj);\r\n    const [user,setUser]=useState({})\r\n    \r\n    const login=async (email,password)=>{\r\n        try {\r\n          const response=await axios.post(\"/api/auth/login\",{email,password})\r\n          console.log(response)\r\n          if(response.status === 200){\r\n            localStorage.setItem(response.data.encodedToken);\r\n            localStorage.setItem(JSON.stringify(response.data.foundUser));\r\n            dispatch({type:\"SET_USER\",payload:response.data.foundUser});\r\n            dispatch({type:\"SET_STATUS\",payload:response.status});\r\n          setTimeout(()=>{\r\n            navigate(\"/\");\r\n          },1000);\r\n          navigate(\"/login\")\r\n          }\r\n          \r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n      }\r\n    return (\r\n      <AuthContext.Provider value={{authState,dispatch,login,status}}>\r\n        {children}\r\n      </AuthContext.Provider>\r\n    );\r\n  };\r\n  const useAuth = () => useContext(AuthContext);\r\n  \r\n  export { AuthProvider, useAuth };\r\n"]},"metadata":{},"sourceType":"module"}
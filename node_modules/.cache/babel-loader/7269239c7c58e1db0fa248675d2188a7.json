{"ast":null,"code":"import _slicedToArray from\"F:/git-practice/react-ecommerce/flip-shop_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useContext,useReducer}from\"react\";import{FilterReducer}from\"../reducer/filter-reducer\";import{jsx as _jsx}from\"react/jsx-runtime\";var ProductContext=/*#__PURE__*/createContext(null);var FilterProvider=function FilterProvider(_ref){var children=_ref.children;var _useReducer=useReducer(FilterReducer,{sortBy:null,maxPrice:10000,productRating:1,productDiscount:\"20%\",solidJacket:false,thinJacket:false,lightWeightJacket:false}),_useReducer2=_slicedToArray(_useReducer,2),productState=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(ProductContext.Provider,{value:{productState:productState,dispatch:dispatch},children:children});};var useFillter=function useFillter(){return useContext(ProductContext);};export{FilterProvider,useFillter};","map":{"version":3,"sources":["F:/git-practice/react-ecommerce/flip-shop_app/src/hooks/context/product-context.jsx"],"names":["createContext","useContext","useReducer","FilterReducer","ProductContext","FilterProvider","children","sortBy","maxPrice","productRating","productDiscount","solidJacket","thinJacket","lightWeightJacket","productState","dispatch","useFillter"],"mappings":"mIAAA,OAASA,aAAT,CAAwBC,UAAxB,CAAoCC,UAApC,KAAsD,OAAtD,CACA,OAASC,aAAT,KAA8B,2BAA9B,C,2CACA,GAAMC,CAAAA,cAAc,cAAGJ,aAAa,CAAC,IAAD,CAApC,CAEA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACvC,gBAAgCJ,UAAU,CAACC,aAAD,CAAgB,CACxDI,MAAM,CAAE,IADgD,CAExDC,QAAQ,CAAE,KAF8C,CAGxDC,aAAa,CAAC,CAH0C,CAIxDC,eAAe,CAAC,KAJwC,CAKxDC,WAAW,CAAC,KAL4C,CAMxDC,UAAU,CAAC,KAN6C,CAOxDC,iBAAiB,CAAC,KAPsC,CAAhB,CAA1C,4CAAOC,YAAP,iBAAoBC,QAApB,iBASA,mBACE,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAE,CAACD,YAAY,CAAZA,YAAD,CAAcC,QAAQ,CAARA,QAAd,CAAhC,UACGT,QADH,EADF,CAKD,CAfD,CAgBA,GAAMU,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMf,CAAAA,UAAU,CAACG,cAAD,CAAhB,EAAnB,CAEA,OAASC,cAAT,CAAyBW,UAAzB","sourcesContent":["import { createContext, useContext, useReducer } from \"react\";\r\nimport { FilterReducer } from \"../reducer/filter-reducer\";\r\nconst ProductContext = createContext(null);\r\n\r\nconst FilterProvider = ({ children }) => {\r\n  const [productState,dispatch] = useReducer(FilterReducer, {\r\n    sortBy: null,\r\n    maxPrice: 10000,\r\n    productRating:1,\r\n    productDiscount:\"20%\",\r\n    solidJacket:false,\r\n    thinJacket:false,\r\n    lightWeightJacket:false\r\n  });\r\n  return (\r\n    <ProductContext.Provider value={{productState,dispatch}}>\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\nconst useFillter = () => useContext(ProductContext);\r\n\r\nexport { FilterProvider, useFillter };\r\n"]},"metadata":{},"sourceType":"module"}
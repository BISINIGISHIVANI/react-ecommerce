{"ast":null,"code":"import { addToCartService, updateCartService, removeFromCartService } from \"../../../services/cart-services/cart.service\";\nimport { addToWishlistHandler } from \"../wishlist-util/wishlist-utl\";\nimport { toast } from 'material-react-toastify';\nexport const addToCartHandler = async (product, cartDispatch, token) => {\n  try {\n    const response = await addToCartService(product, token);\n\n    if (response.status === 201) {\n      cartDispatch({\n        type: \"ADD_TO_CART\",\n        payload: response.data.cart\n      });\n      toast.warn(`${product.name}`);\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    alert(error);\n  }\n};\nexport const getCartBill = cart => {\n  const cartQuantity = cart.reduce((acc, curr) => acc + Number(curr.qty), 0);\n  const itemsPrice = cart.reduce((acc, curr) => acc + Number(curr.price * curr.qty), 0);\n  const totalPrice = itemsPrice - 100;\n  return {\n    cartQuantity,\n    itemsPrice,\n    totalPrice\n  };\n};\nexport const updateCartHandler = async (_id, actionType, token, cartDispatch) => {\n  try {\n    const response = await updateCartService(_id, actionType, token);\n\n    if (response.status === 200) {\n      cartDispatch({\n        type: \"UPDATE_CART_ITEM\",\n        payload: response.data.cart\n      });\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    alert(error);\n  }\n};\nexport const removeFromCartHandler = async (_id, token, cartDispatch) => {\n  try {\n    const response = await removeFromCartService(_id, token);\n\n    if (response.status === 200) {\n      cartDispatch({\n        type: \"REMOVE_FROM_CART\",\n        payload: response.data.cart\n      });\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    alert(error);\n  }\n};\nexport const moveToWishlistHandler = async (_id, product, wishlistDispatch, token, cartDispatch) => {\n  try {\n    addToWishlistHandler(product, wishlistDispatch, token);\n    removeFromCartHandler(_id, token, cartDispatch);\n  } catch (error) {\n    alert(error);\n  }\n};","map":{"version":3,"sources":["F:/git-practice/react-ecommerce/flip-shop_app/src/hooks/utilis/cart-utils/cart-util.jsx"],"names":["addToCartService","updateCartService","removeFromCartService","addToWishlistHandler","toast","addToCartHandler","product","cartDispatch","token","response","status","type","payload","data","cart","warn","name","Error","error","alert","getCartBill","cartQuantity","reduce","acc","curr","Number","qty","itemsPrice","price","totalPrice","updateCartHandler","_id","actionType","removeFromCartHandler","moveToWishlistHandler","wishlistDispatch"],"mappings":"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","sourcesContent":["import { addToCartService,updateCartService,removeFromCartService } from \"../../../services/cart-services/cart.service\";\r\nimport {addToWishlistHandler} from \"../wishlist-util/wishlist-utl\";\r\nimport { toast } from 'material-react-toastify';\r\nexport const addToCartHandler = async (product, cartDispatch, token) => {\r\n    try {\r\n        const response = await addToCartService(product, token);\r\n        if (response.status === 201) {\r\n            cartDispatch({ type: \"ADD_TO_CART\", payload: response.data.cart })\r\n            toast.warn(`${product.name}`)\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n    catch (error) {\r\n        alert(error);\r\n    }\r\n}\r\n\r\nexport const getCartBill = (cart) => {\r\n    const cartQuantity = cart.reduce((acc, curr) => acc + Number(curr.qty), 0);\r\n    const itemsPrice = cart.reduce((acc, curr) => acc + Number(curr.price * curr.qty), 0);\r\n    const totalPrice = itemsPrice - 100;\r\n    return { cartQuantity, itemsPrice, totalPrice };\r\n}\r\nexport const updateCartHandler = async (_id, actionType, token, cartDispatch) => {\r\n    try {\r\n        const response = await updateCartService(_id, actionType, token);\r\n        if (response.status === 200) {\r\n            cartDispatch({ type: \"UPDATE_CART_ITEM\", payload: response.data.cart });\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n    catch (error) {\r\n        alert(error);\r\n    }\r\n}\r\nexport const removeFromCartHandler = async (_id, token, cartDispatch) => {\r\n    try {\r\n        const response = await removeFromCartService(_id, token);\r\n        if (response.status === 200) {\r\n            cartDispatch({ type: \"REMOVE_FROM_CART\", payload: response.data.cart });\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n    catch (error) {\r\n        alert(error);\r\n    }\r\n}\r\nexport const moveToWishlistHandler=async(_id, product, wishlistDispatch, token, cartDispatch)=>{\r\n    try {\r\n        addToWishlistHandler(product,wishlistDispatch,token);\r\n        removeFromCartHandler(_id,token,cartDispatch)\r\n    } catch (error) {\r\n        alert(error)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
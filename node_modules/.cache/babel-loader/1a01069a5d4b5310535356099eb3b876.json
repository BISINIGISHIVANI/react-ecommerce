{"ast":null,"code":"import { addToWishlistService, getWishlistService, removeFromWishlistService } from \"../../../services/wishlist-services/wishlist-service\";\nimport { addToCartHandler, updateCartHandler } from \"../cart-utils/cart-util\";\nexport const addToWishlistHandler = async (product, wishlistDispatch, token) => {\n  try {\n    const response = await addToWishlistService(product, token);\n\n    if (response.status === 201) {\n      wishlistDispatch({\n        type: \"ADD_TO_WISHLIST\",\n        payload: response.data.wishlist\n      });\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    alert(error);\n  }\n};\nexport const getWishlistItemsHandler = async (token, wishlistDispatch) => {\n  try {\n    const response = await getWishlistService(token);\n\n    if (response.status === 200) {\n      wishlistDispatch({\n        type: \"GET_WISHLIST\",\n        payload: response.data.wishlist\n      });\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    alert(error);\n  }\n};\nexport const moveToCartandler = async (_id, product, token, cartState, cartDispatch) => {\n  try {\n    const {\n      cart\n    } = cartState;\n    const item = cart.find(item => item._id === _id);\n\n    if (item) {\n      updateCartHandler(_id, \"increment\", token, cartDispatch);\n    } else {\n      addToCartHandler(product, cartDispatch, token);\n    }\n  } catch (error) {\n    alert(error);\n  }\n};\nexport const removeFromWishlistHandler = async (_id, token, wishlistDispatch) => {\n  try {\n    const response = await removeFromWishlistService(_id, token);\n\n    if (response.status === 200) {\n      wishlistDispatch({\n        type: \"REMOVE_FROM_WISHLIST\",\n        payload: response.data.wishlist\n      });\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    alert(error);\n  }\n};","map":{"version":3,"sources":["F:/git-practice/react-ecommerce/flip-shop_app/src/hooks/utilis/wishlist-util/wishlist-utl.jsx"],"names":["addToWishlistService","getWishlistService","removeFromWishlistService","addToCartHandler","updateCartHandler","addToWishlistHandler","product","wishlistDispatch","token","response","status","type","payload","data","wishlist","Error","error","alert","getWishlistItemsHandler","moveToCartandler","_id","cartState","cartDispatch","cart","item","find","removeFromWishlistHandler"],"mappings":"AAAA,SAAQA,oBAAR,EAA6BC,kBAA7B,EAAgDC,yBAAhD,QAAgF,sDAAhF;AACA,SAAQC,gBAAR,EAAyBC,iBAAzB,QAAiD,yBAAjD;AACA,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,OAAP,EAAgBC,gBAAhB,EAAkCC,KAAlC,KAA4C;AAC5E,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMT,oBAAoB,CAACM,OAAD,EAAUE,KAAV,CAA3C;;AACA,QAAIC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBH,MAAAA,gBAAgB,CAAC;AAAEI,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAAlD,OAAD,CAAhB;AACH,KAFD,MAGK;AACD,YAAM,IAAIC,KAAJ,EAAN;AACH;AACJ,GARD,CASA,OAAOC,KAAP,EAAc;AACVC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACJ,CAbM;AAcP,OAAO,MAAME,uBAAuB,GAAC,OAAOV,KAAP,EAAaD,gBAAb,KAAgC;AACjE,MAAI;AACA,UAAME,QAAQ,GAAG,MAAMR,kBAAkB,CAACO,KAAD,CAAzC;;AACA,QAAIC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBH,MAAAA,gBAAgB,CAAC;AAAEI,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAA/C,OAAD,CAAhB;AACH,KAFD,MAEK;AACD,YAAM,IAAIC,KAAJ,EAAN;AACH;AAEJ,GARD,CAQE,OAAOC,KAAP,EAAc;AACZC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACJ,CAZM;AAaP,OAAO,MAAMG,gBAAgB,GAAC,OAAOC,GAAP,EAAYd,OAAZ,EAAqBE,KAArB,EAA4Ba,SAA5B,EAAuCC,YAAvC,KAAsD;AAChF,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAWF,SAAjB;AACA,UAAMG,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUD,IAAI,IAAIA,IAAI,CAACJ,GAAL,KAAaA,GAA/B,CAAb;;AACA,QAAII,IAAJ,EAAU;AACNpB,MAAAA,iBAAiB,CAACgB,GAAD,EAAM,WAAN,EAAmBZ,KAAnB,EAA0Bc,YAA1B,CAAjB;AACH,KAFD,MAEO;AACHnB,MAAAA,gBAAgB,CAACG,OAAD,EAAUgB,YAAV,EAAwBd,KAAxB,CAAhB;AACH;AAEJ,GATD,CASE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACJ,CAbM;AAcP,OAAO,MAAMU,yBAAyB,GAAG,OAAON,GAAP,EAAYZ,KAAZ,EAAmBD,gBAAnB,KAAwC;AAC7E,MAAI;AACA,UAAME,QAAQ,GAAG,MAAMP,yBAAyB,CAACkB,GAAD,EAAMZ,KAAN,CAAhD;;AACA,QAAIC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBH,MAAAA,gBAAgB,CAAC;AAAEI,QAAAA,IAAI,EAAE,sBAAR;AAAgCC,QAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAAvD,OAAD,CAAhB;AACH,KAFD,MAGK;AACD,YAAM,IAAIC,KAAJ,EAAN;AACH;AACJ,GARD,CASA,OAAOC,KAAP,EAAc;AACVC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACJ,CAbM","sourcesContent":["import {addToWishlistService,getWishlistService,removeFromWishlistService} from \"../../../services/wishlist-services/wishlist-service\";\r\nimport {addToCartHandler,updateCartHandler} from \"../cart-utils/cart-util\";\r\nexport const addToWishlistHandler = async (product, wishlistDispatch, token) => {\r\n    try {\r\n        const response = await addToWishlistService(product, token);\r\n        if (response.status === 201) {\r\n            wishlistDispatch({ type: \"ADD_TO_WISHLIST\", payload: response.data.wishlist })\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n    catch (error) {\r\n        alert(error);\r\n    }\r\n}\r\nexport const getWishlistItemsHandler=async (token,wishlistDispatch)=>{\r\n    try {\r\n        const response = await getWishlistService(token);\r\n        if (response.status === 200) {\r\n            wishlistDispatch({ type: \"GET_WISHLIST\", payload: response.data.wishlist })\r\n        }else{\r\n            throw new Error();\r\n        }\r\n       \r\n    } catch (error) {\r\n        alert(error)\r\n    }\r\n}\r\nexport const moveToCartandler=async (_id, product, token, cartState, cartDispatch)=>{\r\n    try {\r\n        const { cart } = cartState;\r\n        const item = cart.find(item => item._id === _id);\r\n        if (item) {\r\n            updateCartHandler(_id, \"increment\", token, cartDispatch);\r\n        } else {\r\n            addToCartHandler(product, cartDispatch, token);\r\n        }\r\n        \r\n    } catch (error) {\r\n        alert(error)\r\n    }\r\n}\r\nexport const removeFromWishlistHandler = async (_id, token, wishlistDispatch) => {\r\n    try {\r\n        const response = await removeFromWishlistService(_id, token);\r\n        if (response.status === 200) {\r\n            wishlistDispatch({ type: \"REMOVE_FROM_WISHLIST\", payload: response.data.wishlist });\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n    catch (error) {\r\n        alert(error);\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\git-practice\\\\react-ecommerce\\\\src\\\\pages\\\\authentication\\\\login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../authentication.css\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"../../../components/navbar/navabar\";\nimport { useAuth } from \"../../../hooks/context/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function loginPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    authDispatch\n  } = useAuth();\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const guestUser = {\n    email: \"bharathKumar@gmail.com\",\n    password: \"bharath444\"\n  };\n\n  const changeHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const guestUserHandler = event => {\n    event.preventDefault();\n    setUser(guestUser);\n  };\n\n  const loginHandler = async () => {\n    try {\n      const response = await axios.post(\"/api/auth/login\", user);\n\n      if (response.status === 200) {\n        localStorage.setItem(\"token\", response.data.encodedToken);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.foundUser));\n        authDispatch({\n          type: \"LOGIN\",\n          payload: {\n            user: response.data.foundUser,\n            token: response.data.encodedToken\n          }\n        });\n        navigate(\"/\");\n      } else if (response.status === 404) {\n        alert(\"Email not found\");\n      } else if (response.status === 401) {\n        alert(\"Wrong Password\");\n      } else if (response.status === 500) {\n        alert(\"Server Error\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const checkInputsAreNotEmpty = user => {\n    for (let key in user) {\n      if (!Boolean(user[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!checkInputsAreNotEmpty(user)) {\n      alert(\"feild are not empty\");\n    } else {\n      loginHandler(user, authDispatch, navigate);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginbox-align\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: user.email,\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email address \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: user.password,\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"div-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password-save\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: \"remember-me\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"remember-me\",\n                  children: \"Remember me\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/forgot-password\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"forgot-pwd\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"forgot-label\",\n                    children: \"forgot password ?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"login-submit\",\n              onClick: guestUserHandler,\n              children: \"Add Guest credentials\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"login-submit\",\n              onClick: submitHandler,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"create-account\",\n                children: \"Create New Account \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(loginPage, \"Iep4J1j7IiEC7WoFEScvZNCzcJo=\", false, function () {\n  return [useNavigate, useAuth];\n});","map":{"version":3,"sources":["F:/git-practice/react-ecommerce/src/pages/authentication/login/Login.jsx"],"names":["Link","NavBar","useAuth","useNavigate","axios","useState","loginPage","navigate","authDispatch","user","setUser","email","password","guestUser","changeHandler","event","name","value","target","guestUserHandler","preventDefault","loginHandler","response","post","status","localStorage","setItem","data","encodedToken","JSON","stringify","foundUser","type","payload","token","alert","error","console","checkInputsAreNotEmpty","key","Boolean","submitHandler","e"],"mappings":"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","sourcesContent":["import \"../authentication.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../../../components/navbar/navabar\";\r\nimport { useAuth } from \"../../../hooks/context/auth-context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function loginPage() {\r\n  const navigate = useNavigate();\r\n  const { authDispatch } = useAuth();\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n  const guestUser = {\r\n    email: \"bharathKumar@gmail.com\",\r\n    password: \"bharath444\"\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n  const guestUserHandler = (event) => {\r\n    event.preventDefault();\r\n    setUser(guestUser);\r\n  };\r\n  const loginHandler = async () => {\r\n    try {\r\n      const response = await axios.post(\"/api/auth/login\", user);\r\n      if (response.status === 200) {\r\n        localStorage.setItem(\"token\", response.data.encodedToken);\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.foundUser));\r\n\r\n        authDispatch({\r\n          type: \"LOGIN\",\r\n          payload: {\r\n            user: response.data.foundUser,\r\n            token: response.data.encodedToken\r\n          }\r\n        });\r\n\r\n        navigate(\"/\");\r\n      } else if (response.status === 404) {\r\n        alert(\"Email not found\");\r\n      } else if (response.status === 401) {\r\n        alert(\"Wrong Password\");\r\n      } else if (response.status === 500) {\r\n        alert(\"Server Error\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const checkInputsAreNotEmpty = (user) => {\r\n    for (let key in user) {\r\n      if (!Boolean(user[key])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!checkInputsAreNotEmpty(user)) {\r\n      alert(\"feild are not empty\");\r\n    } else {\r\n      loginHandler(user, authDispatch, navigate);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"loginbox-align\">\r\n        <div className=\"login-box\">\r\n          <h2>Login</h2>\r\n          <form>\r\n            <div className=\"user-box\">\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={user.email}\r\n                onChange={changeHandler}\r\n              />\r\n              <label>Email address </label>\r\n            </div>\r\n            <div className=\"user-box\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={user.password}\r\n                onChange={changeHandler}\r\n              />\r\n              <label>Password</label>\r\n            </div>\r\n            <div className=\"password-box\">\r\n              <div className=\"div-inline\">\r\n                <div className=\"password-save\">\r\n                  <input type=\"checkbox\" name=\"remember-me\" />\r\n                  <label htmlFor=\"remember-me\">Remember me</label>\r\n                </div>\r\n                <Link to=\"/forgot-password\">\r\n                  <div className=\"forgot-pwd\">\r\n                    <span className=\"forgot-label\">forgot password ?</span>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"login-submit\"\r\n                onClick={guestUserHandler}\r\n              >\r\n                Add Guest credentials\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"login-submit\"\r\n                onClick={submitHandler}\r\n              >\r\n                Login\r\n              </button>\r\n              <Link to=\"/signup\">\r\n                <button className=\"create-account\">Create New Account </button>\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
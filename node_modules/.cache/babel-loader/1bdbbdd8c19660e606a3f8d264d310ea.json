{"ast":null,"code":"var _jsxFileName = \"F:\\\\git-practice\\\\react-ecommerce\\\\flip-shop_app\\\\src\\\\pages\\\\authentication\\\\login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../authentication.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { TextInput } from \"../components/textInput\";\nimport { PasswordInput } from \"../components/passwordInput\";\nimport { useAuth } from \"../../../hooks/context/auth-context\";\nimport { loginService } from \"../server/login_server\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function loginPage() {\n  _s();\n\n  const [userData, setUserData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const {\n    authDispatch\n  } = useAuth();\n\n  const checkFieldsNotEmpty = userData => {\n    for (let key in userData) {\n      if (!Boolean(userData[key]) && key !== \"passwordsDifferent\") {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const loginHandler = e => {\n    e.preventDefault();\n\n    if (!checkFieldsNotEmpty(userData)) {\n      alert(\"Email and Password cannot be empty!\");\n    } else {\n      loginService(userData, authDispatch, navigate);\n    }\n  };\n\n  const guestHandler = e => {\n    e.preventDefault();\n    setUserData({\n      email: \"test@gmail.com\",\n      password: \"tester\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginbox-align\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box\",\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            id: \"email\",\n            name: \"email\",\n            userData: userData,\n            setUserData: setUserData,\n            type: \"email\",\n            labelText: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box\",\n          children: [/*#__PURE__*/_jsxDEV(PasswordInput, {\n            labelText: \"Password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            userData: userData,\n            setUserData: setUserData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-save\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"remember-me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"remember-me\",\n                children: \"Remember me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/forgot-password\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forgot-pwd\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"forgot-label\",\n                  children: \"forgot password ?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"login-submit\",\n            onClick: guestHandler,\n            children: \"Add Guest credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"login-submit\",\n            onClick: loginHandler,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-account\",\n              children: \"Create New Account \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(loginPage, \"4bbu2MGK8X+YPpNzPdRIOpUMafs=\", false, function () {\n  return [useNavigate, useAuth];\n});","map":{"version":3,"sources":["F:/git-practice/react-ecommerce/flip-shop_app/src/pages/authentication/login/Login.jsx"],"names":["Link","useNavigate","TextInput","PasswordInput","useAuth","loginService","useState","loginPage","userData","setUserData","email","password","navigate","authDispatch","checkFieldsNotEmpty","key","Boolean","loginHandler","e","preventDefault","alert","guestHandler"],"mappings":"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","sourcesContent":["import \"../authentication.css\";\r\nimport { Link,useNavigate } from \"react-router-dom\";\r\nimport { TextInput } from \"../components/textInput\";\r\nimport { PasswordInput } from \"../components/passwordInput\";\r\nimport { useAuth } from \"../../../hooks/context/auth-context\";\r\nimport { loginService } from \"../server/login_server\";\r\nimport { useState } from \"react\";\r\nexport default function loginPage() {\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const { authDispatch } = useAuth();\r\n   const checkFieldsNotEmpty = (userData) => {\r\n    for (let key in userData) {\r\n      if (!Boolean(userData[key]) && key !== \"passwordsDifferent\" ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!checkFieldsNotEmpty(userData)) {\r\n      alert(\"Email and Password cannot be empty!\");\r\n    } else {\r\n      loginService(userData, authDispatch, navigate);\r\n    }\r\n  };\r\n\r\n  const guestHandler = (e) => {\r\n    e.preventDefault();\r\n    setUserData({ email: \"test@gmail.com\", password: \"tester\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginbox-align\">\r\n      <div className=\"login-box\">\r\n        <h2>Login</h2>\r\n        <form>\r\n          <div className=\"user-box\">\r\n            <TextInput\r\n            id=\"email\"\r\n            name=\"email\"\r\n            userData={userData}\r\n            setUserData={setUserData}\r\n            type=\"email\"\r\n            labelText=\"Email\"\r\n            />\r\n            <label>Email address </label>\r\n          </div>\r\n          <div className=\"user-box\">\r\n           <PasswordInput\r\n            labelText=\"Password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            userData={userData}\r\n            setUserData={setUserData}\r\n          />\r\n            <label>Password</label>\r\n          </div>\r\n          <div className=\"password-box\">\r\n            <div className=\"div-inline\">\r\n              <div className=\"password-save\">\r\n                <input type=\"checkbox\" name=\"remember-me\" />\r\n                <label for=\"remember-me\">Remember me</label>\r\n              </div>\r\n              <Link to=\"/forgot-password\">\r\n              <div className=\"forgot-pwd\">\r\n                <span className=\"forgot-label\">forgot password ?</span>\r\n              </div>\r\n              </Link>\r\n            </div>\r\n            <button type=\"submit\" className=\"login-submit\"onClick={guestHandler}>\r\n            Add Guest credentials\r\n            </button>\r\n            <button type=\"submit\" className=\"login-submit\"onClick={loginHandler}>\r\n              Login\r\n            </button>\r\n            <Link to=\"/signup\">\r\n            <button className=\"create-account\">Create New Account </button>\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
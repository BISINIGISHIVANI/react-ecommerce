{"ast":null,"code":"var _jsxFileName = \"F:\\\\git-practice\\\\react-ecommerce\\\\flip-shop_app\\\\src\\\\hooks\\\\context\\\\auth-context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useReducer } from \"react\";\nimpor;\nimport { AuthReducer } from \"../reducer/auth-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst intialObj = {\n  user: \"\",\n  token: \"\"\n};\nconst AuthContext = /*#__PURE__*/createContext(null);\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [authState, authDispatch] = useReducer(AuthReducer, intialObj);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    authDispatch({\n      type: \"CHECK_USER\",\n      payload: {\n        user,\n        token\n      }\n    });\n  }, []);\n\n  const loginHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const response = await axios.post(\"/api/auth/login\", user);\n\n      if (response.status === 200) {\n        localStorage.setItem(\"token\", response.data.encodedToken);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.foundUser));\n        authDispatch({\n          type: \"LOGIN\",\n          payload: {\n            user: response.data.foundUser,\n            token: response.data.encodedToken\n          }\n        });\n        navigate(\"/\");\n      } else if (response.status === 404) {\n        alert(\"Email not found\");\n      } else if (response.status === 401) {\n        alert(\"Wrong Password\");\n      } else if (response.status === 500) {\n        alert(\"Server Error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      authDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthProvider, \"eFhUZ25X+1vOB89QSr2rLYspQw0=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["F:/git-practice/react-ecommerce/flip-shop_app/src/hooks/context/auth-context.jsx"],"names":["createContext","useContext","useEffect","useReducer","impor","AuthReducer","intialObj","user","token","AuthContext","AuthProvider","children","authState","authDispatch","localStorage","getItem","JSON","parse","type","payload","loginHandler","event","preventDefault","response","axios","post","status","setItem","data","encodedToken","stringify","foundUser","navigate","alert","error","console","log","useAuth"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAgE,OAAhE;AACAC,KAAK;AACL,SAASC,WAAT,QAA4B,yBAA5B;;AACA,MAAMC,SAAS,GAAC;AACdC,EAAAA,IAAI,EAAC,EADS;AAEdC,EAAAA,KAAK,EAAC;AAFQ,CAAhB;AAIA,MAAMC,WAAW,gBAACT,aAAa,CAAC,IAAD,CAA/B;;AACA,MAAMU,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnC,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BV,UAAU,CAACE,WAAD,EAAcC,SAAd,CAA3C;AACAJ,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMM,KAAK,GAAGM,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMR,IAAI,GAAGS,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAF,IAAAA,YAAY,CAAC;AAAEK,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,OAAO,EAAE;AAAEZ,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAA/B,KAAD,CAAZ;AACD,GAJQ,EAIP,EAJO,CAAT;;AAKA,QAAMY,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAW,iBAAX,EAA8BlB,IAA9B,CAAvB;;AACA,UAAIgB,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAE3BZ,QAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BJ,QAAQ,CAACK,IAAT,CAAcC,YAA5C;AACAf,QAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACc,SAAL,CAAeP,QAAQ,CAACK,IAAT,CAAcG,SAA7B,CAA7B;AAEAlB,QAAAA,YAAY,CAAC;AAAEK,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,OAAO,EAAE;AAAEZ,YAAAA,IAAI,EAAEgB,QAAQ,CAACK,IAAT,CAAcG,SAAtB;AAAiCvB,YAAAA,KAAK,EAAEe,QAAQ,CAACK,IAAT,CAAcC;AAAtD;AAA1B,SAAD,CAAZ;AAEAG,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,OARD,MASK,IAAIT,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAChCO,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACD,OAFI,MAGA,IAAIV,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAChCO,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACD,OAFI,MAGA,IAAIV,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAChCO,QAAAA,KAAK,CAAC,cAAD,CAAL;AACD;AACF,KApBD,CAqBA,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GA1BD;;AA2BA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACtB,MAAAA,SAAD;AAAWC,MAAAA;AAAX,KAA7B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvCH;;GAAMD,Y;;KAAAA,Y;;AAwCJ,MAAM2B,OAAO,GAAG;AAAA;;AAAA,SAAMpC,UAAU,CAACQ,WAAD,CAAhB;AAAA,CAAhB;;IAAM4B,O;;AAEN,SAAS3B,YAAT,EAAuB2B,OAAvB","sourcesContent":["import { createContext, useContext, useEffect, useReducer} from \"react\";\r\nimpor\r\nimport { AuthReducer } from \"../reducer/auth-reducer\";\r\nconst intialObj={\r\n  user:\"\",\r\n  token:\"\",\r\n}\r\nconst AuthContext=createContext(null);\r\nconst AuthProvider = ({ children }) => {\r\n    const [authState,authDispatch] = useReducer(AuthReducer, intialObj);\r\n    useEffect(()=>{\r\n      const token = localStorage.getItem(\"token\");\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      authDispatch({ type: \"CHECK_USER\", payload: { user, token } });\r\n    },[])\r\n    const loginHandler = async (event) => {\r\n      event.preventDefault();\r\n      try {\r\n        const response = await axios.post(\"/api/auth/login\", user);\r\n        if (response.status === 200) {\r\n  \r\n          localStorage.setItem(\"token\", response.data.encodedToken);\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data.foundUser));\r\n  \r\n          authDispatch({ type: \"LOGIN\", payload: { user: response.data.foundUser, token: response.data.encodedToken } })\r\n  \r\n          navigate(\"/\");\r\n        }\r\n        else if (response.status === 404) {\r\n          alert(\"Email not found\");\r\n        }\r\n        else if (response.status === 401) {\r\n          alert(\"Wrong Password\");\r\n        }\r\n        else if (response.status === 500) {\r\n          alert(\"Server Error\");\r\n        }\r\n      }\r\n      catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    return (\r\n      <AuthContext.Provider value={{authState,authDispatch}}>\r\n        {children}\r\n      </AuthContext.Provider>\r\n    );\r\n  };\r\n  const useAuth = () => useContext(AuthContext);\r\n  \r\n  export { AuthProvider, useAuth };\r\n"]},"metadata":{},"sourceType":"module"}
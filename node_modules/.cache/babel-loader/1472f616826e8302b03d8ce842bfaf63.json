{"ast":null,"code":"var _jsxFileName = \"F:\\\\git-practice\\\\react-ecommerce\\\\flip-shop_app\\\\src\\\\pages\\\\cart\\\\Cart.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./cart.css\";\nimport { CartAmount } from \"./component/CartAmount\";\nimport { CartItem } from \"./component/CartItem\";\nimport { useCart } from \"../../hooks/context/cart-context\";\nimport { getCartItemService } from \"../../services\";\nimport { updateCartHandler, removeFromCartHandler, cartTotalPriceHandler } from \"../../hooks/utilis\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cart() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    cartState,\n    cartDispatch\n  } = useCart();\n  const {\n    cart\n  } = cartState;\n  const {\n    cartQuantity,\n    cartItemPrice,\n    cartTotal\n  } = cartTotalPriceHandler(cart);\n\n  const getUpdateCartHandler = (_id, actionType) => {\n    updateCartHandler(_id, actionType, token, cartDispatch);\n  };\n\n  const getRemoveFromCartHandler = _id => {\n    removeFromCartHandler(_id, token, cartDispatch);\n  };\n\n  const getCartItems = async () => {\n    _s();\n\n    try {\n      const response = await getCartItemService(token);\n\n      if (response.status === 200) {\n        cartDispatch({\n          type: \"GET_CART\",\n          payload: response.data.cart\n        });\n      } else {\n        throw new Error();\n      }\n    } catch (error) {\n      alert(error);\n    }\n\n    useEffect(() => getCartItems(), []);\n  };\n\n  _s(getCartItems, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"your cart(\", cartQuantity, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), cart.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-content\",\n        children: cart.map(_ref => {\n          let {\n            _id,\n            image,\n            name,\n            subtitle,\n            price,\n            discount\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(CartItem, {\n            cartId: _id,\n            cartImg: image,\n            imgAlt: \"product\",\n            CartTitle: name,\n            CartSubtitle: subtitle,\n            cartPrice: price,\n            cartDiscount: discount,\n            cartQuantity: cartQuantity,\n            removeFromCart: getRemoveFromCartHandler,\n            updateCart: getUpdateCartHandler\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 10\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Price details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(CartAmount, {\n          cartQuantity: cartQuantity,\n          cartItemPrice: cartItemPrice,\n          cartDiscount: \"100\",\n          cartCharge: \"0\",\n          cartTotal: cartTotal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      emty: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/products\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner-btn1\",\n          children: \"start shopping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Cart, \"tUflA4ut5VBA48SJEbCBj5CMVFk=\", false, function () {\n  return [useCart];\n});\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["F:/git-practice/react-ecommerce/flip-shop_app/src/pages/cart/Cart.jsx"],"names":["React","CartAmount","CartItem","useCart","getCartItemService","updateCartHandler","removeFromCartHandler","cartTotalPriceHandler","Link","Cart","cartState","cartDispatch","cart","cartQuantity","cartItemPrice","cartTotal","getUpdateCartHandler","_id","actionType","token","getRemoveFromCartHandler","getCartItems","response","status","type","payload","data","Error","error","alert","useEffect","length","map","image","name","subtitle","price","discount"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,iBAAT,EAA2BC,qBAA3B,EAAiDC,qBAAjD,QAA8E,oBAA9E;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAC7B,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAyBR,OAAO,EAAtC;AACA,QAAM;AAACS,IAAAA;AAAD,MAAOF,SAAb;AACA,QAAM;AAACG,IAAAA,YAAD;AAAcC,IAAAA,aAAd;AAA4BC,IAAAA;AAA5B,MAAuCR,qBAAqB,CAACK,IAAD,CAAlE;;AACA,QAAMI,oBAAoB,GAAC,CAACC,GAAD,EAAKC,UAAL,KAAkB;AAC3Cb,IAAAA,iBAAiB,CAACY,GAAD,EAAMC,UAAN,EAAkBC,KAAlB,EAAyBR,YAAzB,CAAjB;AACD,GAFD;;AAIA,QAAMS,wBAAwB,GAAIH,GAAD,IAAS;AACxCX,IAAAA,qBAAqB,CAACW,GAAD,EAAME,KAAN,EAAaR,YAAb,CAArB;AACD,GAFD;;AAIA,QAAMU,YAAY,GAAG,YAAY;AAAA;;AAC/B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMlB,kBAAkB,CAACe,KAAD,CAAzC;;AACA,UAAIG,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BZ,QAAAA,YAAY,CAAC;AAAEa,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcd;AAA3C,SAAD,CAAZ;AACD,OAFD,MAEO;AACL,cAAM,IAAIe,KAAJ,EAAN;AACD;AACF,KAPD,CAQA,OAAOC,KAAP,EAAc;AACZC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD;;AAEHE,IAAAA,SAAS,CAAC,MAAMT,YAAY,EAAnB,EAAuB,EAAvB,CAAT;AAEC,GAfD;;AAZ6B,KAYvBA,YAZuB;;AA4B7B,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BAEE;AAAA,+BAAeR,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGD,IAAI,CAACmB,MAAL,KAAe,CAAf,gBACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACEnB,IAAI,CAACoB,GAAL,CAAS;AAAA,cAAC;AAACf,YAAAA,GAAD;AAAKgB,YAAAA,KAAL;AAAWC,YAAAA,IAAX;AAAgBC,YAAAA,QAAhB;AAAyBC,YAAAA,KAAzB;AAA+BC,YAAAA;AAA/B,WAAD;AAAA,8BACT,QAAC,QAAD;AAEA,YAAA,MAAM,EAAEpB,GAFR;AAGA,YAAA,OAAO,EAAEgB,KAHT;AAIA,YAAA,MAAM,EAAE,SAJR;AAKA,YAAA,SAAS,EAAEC,IALX;AAMA,YAAA,YAAY,EAAEC,QANd;AAOA,YAAA,SAAS,EAAEC,KAPX;AAQA,YAAA,YAAY,EAAEC,QARd;AASA,YAAA,YAAY,EAAExB,YATd;AAUD,YAAA,cAAc,EAAEO,wBAVf;AAWD,YAAA,UAAU,EAAEJ;AAXX,aACKC,GADL;AAAA;AAAA;AAAA;AAAA,kBADS;AAAA,SAAT;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAkBA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,UAAD;AACA,UAAA,YAAY,EAAEJ,YADd;AAEA,UAAA,aAAa,EAAEC,aAFf;AAGA,UAAA,YAAY,EAAC,KAHb;AAIA,UAAA,UAAU,EAAC,GAJX;AAKA,UAAA,SAAS,EAAEC;AALX;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBA+BD;AAAK,MAAA,IAAI,MAAT;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA,+BACA;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;IAxEuBN,I;UACSN,O;;;KADTM,I","sourcesContent":["import React from \"react\";\r\nimport \"./cart.css\";\r\nimport { CartAmount } from \"./component/CartAmount\";\r\nimport { CartItem } from \"./component/CartItem\";\r\nimport { useCart } from \"../../hooks/context/cart-context\";\r\nimport { getCartItemService } from \"../../services\";\r\nimport { updateCartHandler,removeFromCartHandler,cartTotalPriceHandler } from \"../../hooks/utilis\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Cart() {\r\n  const {cartState,cartDispatch}=useCart();\r\n  const {cart}=cartState;\r\n  const {cartQuantity,cartItemPrice,cartTotal}=cartTotalPriceHandler(cart);\r\n  const getUpdateCartHandler=(_id,actionType)=>{\r\n    updateCartHandler(_id, actionType, token, cartDispatch);\r\n  }\r\n\r\n  const getRemoveFromCartHandler = (_id) => {\r\n    removeFromCartHandler(_id, token, cartDispatch)\r\n  }\r\n\r\n  const getCartItems = async () => {\r\n    try {\r\n      const response = await getCartItemService(token);\r\n      if (response.status === 200) {\r\n        cartDispatch({ type: \"GET_CART\", payload: response.data.cart })\r\n      } else {\r\n        throw new Error();\r\n      }\r\n    }\r\n    catch (error) {\r\n      alert(error);\r\n    }\r\n\r\n  useEffect(() => getCartItems(), []);\r\n\r\n  }\r\n  return (\r\n    <div className=\"cart-container\">\r\n      \r\n      <h2>your cart({cartQuantity})</h2>\r\n      {cart.length !==0 ?\r\n       <div className=\"cart\">\r\n       <div className=\"cart-content\">\r\n       { cart.map(({_id,image,name,subtitle,price,discount})=>\r\n         <CartItem\r\n         key={_id}\r\n         cartId={_id}\r\n         cartImg={image}\r\n         imgAlt={\"product\"}\r\n         CartTitle={name}\r\n         CartSubtitle={subtitle}\r\n         cartPrice={price}\r\n         cartDiscount={discount}\r\n         cartQuantity={cartQuantity}\r\n        removeFromCart={getRemoveFromCartHandler}\r\n        updateCart={getUpdateCartHandler}\r\n         />\r\n         )} \r\n       </div>\r\n       <div className=\"cart-footer\">\r\n         <h3>Price details</h3>\r\n         <hr />\r\n         <CartAmount \r\n         cartQuantity={cartQuantity} \r\n         cartItemPrice={cartItemPrice}\r\n         cartDiscount=\"100\"\r\n         cartCharge=\"0\"\r\n         cartTotal={cartTotal}\r\n         />\r\n       </div>\r\n     </div>: \r\n      <div emty>\r\n      <h1>your cart is empty</h1>\r\n      <Link to='/products'>\r\n      <button className=\"banner-btn1\">start shopping</button>\r\n      </Link>\r\n    </div>}\r\n    </div>\r\n    \r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}